/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { GhostCounter, GhostCounterInterface } from "../GhostCounter";

const _abi = [
  {
    inputs: [],
    name: "Underflow",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCount",
        type: "uint256",
      },
    ],
    name: "Exorcised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCount",
        type: "uint256",
      },
    ],
    name: "Haunted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "Reset",
    type: "event",
  },
  {
    inputs: [],
    name: "ectoplasms",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exorcise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "haunt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061018f8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80635e15ff8e14610051578063ae3365f81461005b578063d826f88f14610063578063f91038131461006b575b600080fd5b610059610086565b005b6100596100c9565b61005961012a565b61007460005481565b60405190815260200160405180910390f35b600080546001019081905560405190815233907fb4c7f2c3c6ebf43e387296f21973eef37c1b74b0c3a0730e28638c91bcc0574f906020015b60405180910390a2565b6000546000036100ec5760405163caccb6d960e01b815260040160405180910390fd5b60008054600019019081905560405190815233907f4d5bf64ba4037c676103ef253f80d79c16ac518a390501cf13d76c98311baef7906020016100bf565b600080805560405133917f162f46783fcc741c289a7af5bd16474ace09d7e8a9d5fe1ac0d37b12afc0ccac91a256fea2646970667358221220c60cdc0bba38c8565f4099150d0c13fce864a21221b51ceda0f89f4137a03a8b64736f6c634300081c0033";

type GhostCounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GhostCounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GhostCounter__factory extends ContractFactory {
  constructor(...args: GhostCounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GhostCounter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GhostCounter__factory {
    return super.connect(runner) as GhostCounter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GhostCounterInterface {
    return new Interface(_abi) as GhostCounterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GhostCounter {
    return new Contract(address, _abi, runner) as unknown as GhostCounter;
  }
}
